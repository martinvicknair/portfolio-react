{"version":3,"sources":["components/About/About.js","components/Header/Header.js","components/ProjectSFR/ProjectSFR.js","components/ProjectLFDLT/ProjectLFDLT.js","components/ProjectR14/ProjectR14.js","components/Projects/Projects.js","components/GitHubActivity/GitHubActivity.js","components/GitHubSection/GitHubSection.js","App.js","serviceWorker.js","index.js"],"names":["About","props","react_default","a","createElement","Card","className","CardBody","CardText","Button","href","target","CardFooter","Header","Jumbotron","src","alt","width","ProjectSFR","CardHeader","CardTitle","tag","CardSubtitle","Row","Col","sm","size","offset","ProjectLFDLT","ProjectR14","Projects","components_ProjectSFR_ProjectSFR","components_ProjectLFDLT_ProjectLFDLT","components_ProjectR14_ProjectR14","GitHubActivity","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","isFetching","events","react_github_activity_lib_default","fullName","userName","avatarUrl","_this2","url","concat","axios","get","then","response","setState","data","catch","e","console","error","React","Component","GitHubSection","id","components_GitHubActivity_GitHubActivity","GitHubCalendar","responsive","App","Container","components_Header_Header","components_About_About","components_Projects_Projects","components_GitHubSection_GitHubSection","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.fd7e5add.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Button, Card, CardHeader, CardImg, CardText, CardBody, CardFooter, CardLink,\r\n  CardTitle, CardSubtitle, Col, Row } from 'reactstrap';\r\n\r\nconst About = (props) => {\r\n  return (\r\n    <div>\r\n      <Card className=\"mb-2\">\r\n        <CardBody>\r\n        <CardText className=\"mt-1\">This website built with Create-React-App</CardText>\r\n\r\n\r\n<Button href=\"https://github.com/martinvicknair/martinvicknair.github.io\" target=\"_blank\"><i className=\"fab fa-github\"></i>View code on GitHub</Button>\r\n\r\n        </CardBody>\r\n        <CardFooter />\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","import React from 'react';\r\nimport { Jumbotron, Container } from 'reactstrap';\r\nimport \"./Header.css\";\r\n\r\nconst Header = (props) => {\r\n  return (\r\n    <div>\r\n      <Jumbotron className=\"header clearfix\">\r\n        <img className=\"profile-image img-fluid float-left\"  src=\"assets/images/profile.jpg\" alt=\"Martin Vicknair\" width=\"160\" />\r\n        <div className=\"profile-content float-left\">\r\n          <h1 className=\"name\">Martin Vicknair</h1>\r\n          <h2 className=\"desc\">Web Developer</h2>\r\n          <ul className=\"social list-inline\">\r\n            <li className=\"list-inline-item\"><a href=\"https://www.linkedin.com/in/martinvicknair/\"><i className=\"fab fa-linkedin-in\"></i></a></li>\r\n            <li className=\"list-inline-item\"><a href=\"https://github.com/martinvicknair/\"><i className=\"fab fa-github\"></i></a></li>\r\n          </ul>\r\n        </div>\r\n        <a className=\"btn btn-cta-primary float-right\" href=\"#contactInfo\"><i className=\"fas fa-paper-plane\"></i> Contact Me</a>\r\n      </Jumbotron>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport { Button, Card, CardHeader, CardImg, CardText, CardBody, CardFooter, CardLink,\r\n  CardTitle, CardSubtitle, Col, Row } from 'reactstrap';\r\n\r\nconst ProjectSFR = (props) => {\r\n  return (\r\n    <div>\r\n      <Card className=\"mb-2\">\r\n        <CardBody>\r\n        <CardHeader>\r\n          <CardTitle tag=\"h3\" className=\"text-center\"><a href=\"https://summerfoodrocks.org\">summerfoodrocks.org</a></CardTitle>\r\n          <CardSubtitle className=\"text-center\">A Summer Meals Site Finder and Electronic Meal Counter app</CardSubtitle>\r\n          </CardHeader>\r\n        <img width=\"80%\" src=\"assets/images/sfr-screenshot.png\" alt=\"SFR screenshot\" />\r\n\r\n          <CardText>The site features a Summer Meals Site Finder which utilizes an API from the USDA as its data source. There is also an electronic Meal Counter App, which is approved for replacing the paper meal count form available from the USDA.</CardText>\r\n          <CardText tag=\"em\">Ubuntu, Nginx, MySql, PHP, LetsEncrypt, Node.js, Express, Handlebars, Bootstrap</CardText>\r\n\r\n          <Row className=\"text-center mt-2\">\r\n          <Col sm={{ size: 'auto', offset: 1 }}><Button href=\"https://summerfoodrocks.org\" target=\"_blank\"><i className=\"fas fa-external-link-alt\"></i>Visit the website</Button></Col>\r\n          <Col sm={{ size: 'auto', offset: 1 }}><Button href=\"https://github.com/martinvicknair/summerfoodrocks-node\" target=\"_blank\"><i className=\"fab fa-github\"></i>View code on GitHub</Button></Col>\r\n          </Row>\r\n\r\n        </CardBody>\r\n        <CardFooter />\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProjectSFR;\r\n","import React from 'react';\r\nimport { Button, Card, CardHeader, CardImg, CardText, CardBody, CardFooter, CardLink,\r\n  CardTitle, CardSubtitle, Col, Row } from 'reactstrap';\r\n\r\nconst ProjectLFDLT = (props) => {\r\n  return (\r\n    <div>\r\n      <Card className=\"mb-2\">\r\n        <CardBody>\r\n        <CardHeader>\r\n          <CardTitle tag=\"h3\" className=\"text-center\"><a href=\"https://luisfelipedelatorre.com\">luisfelipedelatorre.com</a></CardTitle>\r\n\r\n          </CardHeader>\r\n        <img width=\"80%\" src=\"assets/images/lfdlt-screenshot.png\" alt=\"LFDLT screenshot\" />\r\n\r\n          <CardText>Fully responsive, mobile-first WordPress site showcasing the portfolio of Mexican artist Luis Felipe de la Torre. In Spanish. Server configuration and install.</CardText>\r\n          <CardText tag=\"em\">Ubuntu, Apache, MySql, PHP, LetsEncrypt, WordPress, Yoast SEO</CardText>\r\n\r\n          <Row className=\"text-center mt-2\">\r\n<Col sm={{ size: 'auto', offset: 1 }}><Button href=\"https://luisfelipedelatorre.com\" target=\"_blank\"><i className=\"fas fa-external-link-alt\"></i>Visit the website</Button></Col>\r\n</Row>\r\n\r\n        </CardBody>\r\n        <CardFooter />\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProjectLFDLT;\r\n","import React from 'react';\r\nimport { Button, Card, CardHeader, CardImg, CardText, CardBody, CardFooter, CardLink,\r\n  CardTitle, CardSubtitle, Col, Row } from 'reactstrap';\r\n\r\nconst ProjectR14 = (props) => {\r\n  return (\r\n    <div>\r\n      <Card className=\"mb-2\">\r\n        <CardBody>\r\n        <CardHeader>\r\n          <CardTitle tag=\"h3\" className=\"text-center\"><a href=\"https://realde14.net\">realde14.net</a></CardTitle>\r\n\r\n          </CardHeader>\r\n        <img width=\"80%\" src=\"assets/images/r14-screenshot.png\" alt=\"R14 screenshot\" />\r\n\r\n          <CardText className=\"mt-1\">WordPress site. Mentioned in the \"Lonely Planet Mexico (2016)\" travel guide as the information resource for Real de Catorce, Mexico. Bilingual English/Spanish.<span className=\"font-italic\"> under renovation</span></CardText>\r\n          <CardText tag=\"em\">Ubuntu, Nginx, MySql, PHP, LetsEncrypt, WordPress, Yoast SEO</CardText>\r\n\r\n          <Row className=\"text-center mt-2\">\r\n<Col sm={{ size: 'auto', offset: 1 }}><Button href=\"https://realde14.net\" target=\"_blank\"><i className=\"fas fa-external-link-alt\"></i>Visit the website</Button></Col>\r\n</Row>\r\n\r\n        </CardBody>\r\n        <CardFooter />\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProjectR14;\r\n","import React from 'react';\r\nimport { Card, CardImg, CardText, CardBody, CardHeader,\r\n  CardTitle, CardSubtitle, Button } from 'reactstrap';\r\nimport ProjectSFR from '../ProjectSFR/ProjectSFR';\r\nimport ProjectLFDLT from '../ProjectLFDLT/ProjectLFDLT';\r\nimport ProjectR14 from '../ProjectR14/ProjectR14';\r\n\r\nconst Projects = (props) => {\r\n  return (\r\n    <div>\r\n      <Card className=\"mb-2\">\r\n        <CardHeader tag=\"h2\">Current Projects</CardHeader>\r\n        <CardBody>\r\n        <ProjectSFR />\r\n        <ProjectLFDLT />\r\n        <ProjectR14 />\r\n\r\n\r\n        </CardBody>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Projects;\r\n","import React from 'react';\r\nimport GitHubFeed from 'react-github-activity';\r\nimport axios from 'axios';\r\n\r\nconst fullName = 'Martin Vicknair';\r\n    const userName = 'martinvicknair';\r\n    const avatarUrl = 'https://avatars1.githubusercontent.com/u/32040730';\r\n    var events = [];\r\n\r\nclass GitHubActivity extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n        isFetching: true,\r\n        events: [] \r\n    };\r\n  }\r\n\r\n  render() {\r\n    \r\n    \r\n /* data result from https://api.github.com/users/${userName}/events */     \r\n    return (\r\n      <div>\r\n<p>{this.state.isFetching ? 'Fetching users...' : ''}</p>\r\n    <GitHubFeed\r\n      fullName={fullName} // Provide Full Name as displayed on GitHub\r\n      userName={userName} // Provide User Name as displayed on Guthub\r\n      avatarUrl={avatarUrl} // Provide the avatar url of your github profile\r\n      events={this.state.events} // provide array of events using the users '/events' endpoint of github api\r\n    />\r\n    </div>\r\n    );\r\n  }\r\n  componentDidMount() {\r\n    const url = `https://api.github.com/users/${userName}/events`;\r\n    axios.get(url)\r\n    .then((response) => {\r\n      this.setState({events: response.data});\r\n      //this.setState({name: response.data.name});\r\n    })\r\n    .catch((e) => \r\n    {\r\n      console.error(e);\r\n    });\r\n\r\n}\r\n\r\n}\r\nexport default GitHubActivity;","import React from 'react';\r\nimport { Button, Card, CardHeader, CardImg, CardText, CardBody, CardFooter, CardLink,\r\nCardTitle, CardSubtitle, Col, Row } from 'reactstrap';\r\nimport GitHubCalendar from 'github-calendar';\r\nimport \"./GitHubCalendar.css\";\r\nimport GitHubActivity from \"../GitHubActivity/GitHubActivity\";\r\n\r\n\r\nclass GitHubSection extends React.Component {\r\n// constructor() {\r\n// super();\r\n// this.state = { someKey: 'someValue' };\r\n// }\r\n\r\nrender() {\r\nreturn <div>\r\n  <Card className=\"mb-2\">\r\n    <CardHeader tag=\"h2\"><i className=\"fab fa-github\"></i> GitHub Activity</CardHeader>\r\n    <CardBody>\r\n      <div id=\"github-graph\" className=\"github-graph\">\r\n      </div>\r\n      <div>\r\n        <GitHubActivity />\r\n      </div>\r\n    </CardBody>\r\n    <CardFooter />\r\n  </Card>\r\n</div>;\r\n}\r\n\r\ncomponentDidMount() {\r\nGitHubCalendar(\"#github-graph\", \"martinvicknair\", { responsive: true }) ;\r\n}\r\n}\r\n\r\nexport default GitHubSection;","import React,\n{\nComponent\n}\n\nfrom 'react';\n\nimport {\n// Button,\nContainer,\n// Row,\n// Col,\n// Navbar,\n// NavbarBrand,\n}\n\nfrom 'reactstrap';\nimport About from './components/About/About';\nimport Header from './components/Header/Header';\nimport Projects from './components/Projects/Projects';\nimport GitHubSection from './components/GitHubSection/GitHubSection';\n\n\n\nclass App extends Component {\n\nrender() {\nreturn (< Container>\n  < Header />\n    < About />\n      < Projects />\n        < GitHubSection />\n          < /Container>) } } export default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport '@fortawesome/fontawesome-free/js/all.js';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}